---
import { getTranslations } from "../../i18n/utils"
import ProjectCard from "./project-card.astro"
import { projectsArray } from "./projects-array"
import "./card.css"

const { lang } = Astro.props

const { heading } = getTranslations(lang)
const projects = projectsArray(lang)
const techs = [
	...new Set(
		projects.flatMap((project) => [project.framework, project.lang]).flat(),
	),
]
---

<h3>{heading.projects}</h3>
<form id="projects-view">
	<fieldset>
		<input id="all" type="radio" name="tech" value="all" checked />
		<label for="all">{lang === "en" ? "All" : "全て"}</label>
		{
			techs.map((tech) => (
				<>
					<input
						id={tech}
						type="radio"
						name="tech"
						value={tech.toLowerCase().replace(/\./g, "").replace(/#/g, "s")}
					/>
					<label for={tech} title={tech}>
						{tech}
					</label>
				</>
			))
		}
	</fieldset>
</form>
<div class="projects-container">
	{projects.map((project) => <ProjectCard project={project} />)}
</div>

<style>
	.projects-container {
		-moz-column-count: 1;
		-webkit-column-count: 1;
		column-count: 1;
		-moz-column-gap: 16px;
		-webkit-column-gap: 16px;
		column-gap: 16px;
		margin-left: 0.5rem;
	}

	@media (min-width: 640px) {
		.projects-container {
			-moz-column-width: calc((100% / 3) - 10.6667px);
			-webkit-column-width: calc((100% / 3) - 10.6667px);
			column-width: calc((100% / 3) - 10.6667px);
			-moz-column-count: 2;
			-webkit-column-count: 2;
			column-count: 2;
		}
	}

	@media (min-width: 1280px) {
		.projects-container {
			-moz-column-width: calc((100% / 3) - 10.6667px);
			-webkit-column-width: calc((100% / 3) - 10.6667px);
			column-width: calc((100% / 3) - 10.6667px);
			-moz-column-count: 3;
			-webkit-column-count: 3;
			column-count: 3;
		}
	}
</style>

<style>
	:root {
		--light-input-text: hsl(0, 0%, 20%);
		--light-input-background-light: hsl(0, 0%, 96%);
		--light-input-highlight-text: hsl(0, 0%, 10%);
		--light-input-highlight-background: hsl(210, 100%, 80%);
		--light-field-background: hsla(210, 20%, 98%, 0.8);

		--dark-input-text: hsl(0, 0%, 80%);
		--dark-input-background: hsl(0, 0%, 12%);
		--dark-input-highlight-text: hsl(0, 0%, 100%);
		--dark-input-highlight-background: hsl(210, 80%, 40%);
		--dark-field-background: hsla(0, 0%, 0%, 0.8);

		--input-text: var(--light-input-text);
		--input-background-light: var(--light-input-background-light);
		--input-highlight-background: var(--light-input-highlight-background);
		--input-highlight-text: var(--light-input-highlight-text);
		--field-background: var(--light-field-background);
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--input-text: var(--dark-input-text);
			--input-background-light: var(--dark-input-background);
			--input-highlight-background: var(--dark-input-highlight-background);
			--input-highlight-text: var(--dark-input-highlight-text);
			--field-background: var(--dark-field-background);
		}
	}

	form {
		position: sticky;
		top: 4rem;
		place-self: center;
		max-width: 90vw;
		overflow-x: auto;
		border-radius: 8px;
		border: none;
		z-index: var(--overlay-z-index);
	}

	form fieldset {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
		gap: var(--spaces-2);
		padding: var(--spaces-2);
		border-radius: 8px;
		border: none;
		-webkit-backdrop-filter: blur(15px);
		backdrop-filter: blur(15px);
		background-color: var(--field-background);
	}

	@media (max-width: 600px) {
		form {
			top: 5rem;
		}
	}

	@media (max-height: 800px) {
		form {
			position: relative;
			top: 0;
		}
	}

	form label {
		display: block;
		color: var(--input-text);
		font-size: var(--fontSizes-md);
		cursor: pointer;
		padding: var(--spaces-2) var(--spaces-4);
		position: relative;
		border-radius: 0.4rem;
	}

	form label:hover {
		background-color: var(--input-highlight-background);
		color: var(--input-highlight-text);
		transition: background-color 0.3s;
	}

	form input[type="radio"] {
		display: none;
	}

	form input[type="radio"]:checked + label {
		background-color: var(--input-highlight-background);
		color: var(--input-highlight-text);
	}

	form input[type="radio"]:focus + label {
		outline: 2px solid var(--input-highlight-background);
		outline-offset: 2px;
	}

	:global(.project-card) {
		animation: card-out 0.5s ease-in-out forwards;
		pointer-events: none;
	}

	form:has(input[value="all"]:checked)
		+ .projects-container
		:global(.project-card) {
		animation: card-in 0.5s ease-in-out forwards;
		pointer-events: auto;
	}

	@media (prefers-reduced-motion: reduce) {
		:global(.project-card),
		form:has(input[value="all"]:checked)
			+ .projects-container
			:global(.project-card) {
			transition: none !important;
		}
	}
</style>
