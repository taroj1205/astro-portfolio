---
import { marked } from "marked"
import Container from "./container.astro"
import { timelineJSON } from "./timeline"
import { Image } from "astro:assets"

const { lang } = Astro.props as { lang: "en" | "ja" }

timelineJSON.sort(
  (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),
)
---

<h2>{lang === "ja" ? "僕の旅" : "My Journey"}</h2>
<div class="timeline">
  {
    timelineJSON.map((item, index) => (
      <Container dir={index % 2 === 0 ? "left" : "right"}>
        {item.timestamp && (
          <time datetime={item.timestamp}>{item.timestamp}</time>
        )}
        <h3>{item.title[lang]}</h3>
        <p set:html={marked.parse(item.description[lang].trim())} />
        {item.image && <Image src={item.image} alt={item.title[lang]} />}
      </Container>
    ))
  }
</div>

<style is:global>
  :root {
    --darker-bg: hsl(210, 33%, 93%);
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --darker-bg: hsl(0, 0%, 15%);
    }
  }

  .timeline {
    position: relative;
    margin: 0 auto;
    width: min(50rem, 90vw);
  }

  .timeline h3 {
    font-size: 1.5rem;
  }

  .timeline img {
    width: 100%;
    height: auto;
    border-radius: 0.5rem;
    object-fit: cover;
    position: relative;
    bottom: -0.5rem;
  }

  .timeline time {
    position: absolute;
    top: -0.7rem;
    left: 0.5rem;
    z-index: 1;
    background-color: var(--label-bg);
    padding-inline: 0.7rem;
    padding-block: 0.25rem;
    border-radius: 0.5rem;
    color: white;
  }

  .timeline::after {
    content: "";
    position: absolute;
    width: 6px;
    background-color: var(--darker-bg);
    top: 0;
    bottom: 0;
    left: 50%;
    margin-left: -3px;
  }

  .container {
    padding: 20px 0;
    position: relative;
    background-color: inherit;
    width: 50%;
    text-wrap: pretty;
  }

  .container::before {
    top: 2.2rem;
    content: " ";
    height: 0;
    position: absolute;
    width: 0;
    z-index: 1;
    border: medium solid var(--darker-bg);
  }

  .container::after {
    content: "";
    position: absolute;
    width: 25px;
    height: 25px;
    right: 0;
    background-color: white;
    border: 4px solid #ff9f55;
    top: 2rem;
    border-radius: 50%;
    z-index: 1;
  }

  .left::after {
    transform: translateX(50%);
  }

  .right::after {
    transform: translateX(15%);
  }

  .left {
    left: 0;
    padding-right: 35px;
  }

  .right {
    left: 50%;
    padding-left: 35px;
  }

  .left::before {
    right: 25px;
    border-width: 10px 0 10px 10px;
    border-color: transparent transparent transparent var(--darker-bg);
  }

  .right::before {
    left: 25px;
    border-width: 10px 10px 10px 0;
    border-color: transparent var(--darker-bg) transparent transparent;
  }

  .right::after {
    left: -16px;
  }

  .content {
    padding: 20px 30px;
    background-color: var(--darker-bg);
    position: relative;
    border-radius: 6px;
  }

  .content:has(img) {
    padding-bottom: 0px;
    padding-inline: 0;
  }

  .content:has(img) > p,
  .content:has(img) > h3 {
    padding-bottom: 0px;
    padding-inline: 20px;
  }

  @container (max-width: 600px) {
    .timeline::after {
      left: 31px;
    }

    .container {
      width: 100%;
      padding-left: 60px;
      padding-right: 0;
    }

    .container::before {
      left: 50px;
      border: medium solid var(--darker-bg);
      border-width: 10px 10px 10px 0;
      border-color: transparent var(--darker-bg) transparent transparent;
    }

    .left::after,
    .right::after {
      left: 15px;
    }

    .left::after {
      transform: translateX(15%);
    }

    .right {
      left: 0%;
    }
  }

  @container (max-width: 400px) {
    .content {
      padding-block: 15px;
    }
  }
</style>
